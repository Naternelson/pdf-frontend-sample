{"version":3,"sources":["logo.svg","form/UploadForm.js","form/DataLine.js","form/DataHeader.js","utilities/string/titleize.js","App.js","reportWebVitals.js","index.js"],"names":["UploadForm","props","submissionHandler","formData","dataActive","fileInputName","changeHandler","e","target","name","append","files","value","Form","onSubmit","Array","from","document","querySelectorAll","forEach","input","className","Group","Label","htmlFor","Control","size","type","onChange","Text","id","muted","Button","DataLine","line","lineNum","tds","attributes","map","a","i","dataindex","DataHeader","str","titleize","humanizeString","App","useState","rows","setRows","loading","setLoading","header","setHeader","fName","configRequest","data","url","config","preventDefault","axios","post","res","tableData","Object","keys","tblAtts","tblHead","tableBody","entries","key","console","error","Modal","show","onHide","centered","style","padding","display","flexDirection","justifyContent","background","textAlign","Spinner","animation","Container","Row","Col","fileName","Table","striped","bordered","hover","FormData","headers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8PAAe,I,6CC2CAA,EArCI,SAAAC,GACf,IAAOC,EAA2CD,EAA3CC,kBAAmBC,EAAwBF,EAAxBE,SAAUC,EAAcH,EAAdG,WAC9BC,EAAgB,WAChBC,EAAgB,SAAAC,GAClB,GAAOA,EAAEC,OAAOC,OACNJ,EACFF,EAASO,OAAOL,EAAeE,EAAEC,OAAOG,MAAM,SAG9CR,EAASO,OAAOH,EAAEC,OAAOC,KAAMF,EAAEC,OAAOI,QAapD,OAAO,eAACC,EAAA,EAAD,CAAMC,SAJW,SAACP,GACrBL,EAAkBK,GALlBQ,MAAMC,KAAKC,SAASC,iBAAiB,UAAUC,SAC3C,SAAAC,GAAK,OAAKA,EAAMR,MAAQ,OAOQS,UAAU,OAA3C,UACC,qBAAKA,UAAU,gCAAf,SAA+C,+CAC/C,eAACR,EAAA,EAAKS,MAAN,CAAYD,UAAW,OAAvB,UACI,cAACR,EAAA,EAAKU,MAAN,CAAYC,QAASnB,EAArB,kBACA,cAACQ,EAAA,EAAKY,QAAN,CAAcC,KAAMtB,EAAa,KAAO,KAAMuB,KAAK,OAAOlB,KAAMJ,EAAeuB,SAAUtB,OAE7F,eAACO,EAAA,EAAKS,MAAN,CAAYD,UAAW,OAAvB,UACI,cAACR,EAAA,EAAKU,MAAN,CAAYC,QAAQ,YAApB,uBACA,cAACX,EAAA,EAAKY,QAAN,CAAcC,KAAK,KAAKC,KAAK,SAASlB,KAAK,YAAY,mBAAiB,oBAAoBmB,SAAUtB,IACtG,cAACO,EAAA,EAAKgB,KAAN,CAAWC,GAAG,oBAAoBC,OAAK,EAAvC,4DAEJ,cAACC,EAAA,EAAD,CAAQL,KAAK,SAASD,KAAK,KAA3B,yBC7BGO,EAPE,SAAAhC,GACb,IAAOiC,EAA6BjC,EAA7BiC,KAAMC,EAAuBlC,EAAvBkC,QACPC,EAD8BnC,EAAdoC,WACCC,KAAI,SAACC,EAAEC,GAAH,OAAS,oBAAYC,UAAWN,EAAvB,SAAiCD,EAAKK,IAA7BC,MAC7C,OAAO,oBAAInB,UAAW,YAAf,SACFe,K,iFCFT,IAOeM,EAPI,SAAAzC,GACf,IAAKoC,EAAcpC,EAAdoC,WAEL,OADAA,EAAaA,EAAWC,KAAI,SAAAC,GAAC,OAAI,8BCJJI,EDI0BJ,ECHhDK,YAASC,IAAeF,MDGWJ,GCJ/B,IAAkBI,KDKtB,oBAAItB,UAAW,YAAf,SACFgB,KE4DMS,MA3Df,WACE,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,mBAAS,MAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KACA,GADA,KAC4BC,KAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,OAEZxD,EAAiB,uCAAG,WAAOK,GAAP,uBAAAgC,EAAA,6DACtBhC,EAAEoD,iBADoB,SAGlBR,GAAW,GAHO,SAIAS,IAAMC,KAAKJ,EAAKD,EAAME,GAJtB,OAIZI,EAJY,OAMZC,EAAYD,EAAIN,KAAKQ,OAAOC,KAAKH,EAAIN,MAAM,IAC3CU,EAAUH,EAAU1B,WACpB8B,EAAU,cAAC,EAAD,CAAY9B,WAAY6B,IAClCE,EAAYJ,OAAOK,QAAQN,EAAUP,MAAMlB,KAAI,mCAAEgC,EAAF,KAAO1D,EAAP,YAAkB,cAAC,EAAD,CAAoBuB,QAASmC,EAAKpC,KAAMtB,EAAOyB,WAAY6B,GAA5CI,MACtFrB,EAAQmB,GACRf,EAAUc,GACVhB,GAAW,GAZO,kDAclBA,GAAW,GACXoB,QAAQC,MAAM,CAACA,MAAK,OAfF,0DAAH,sDAkBvB,OACE,sBAAK1C,GAAG,OAAOT,UAAY2B,EAAgE,GAAzD,uDAAlC,UACE,cAACyB,EAAA,EAAD,CAAOC,KAAMxB,EAASyB,OAAQ,kBAAIxB,GAAW,IAAQyB,UAAQ,EAA7D,SACE,qBAAKC,MAAO,CAACC,QAAS,OAAOC,QAAS,OAAQC,cAAc,MAAOC,eAAe,SAAUC,WAAW,eAAvG,SACE,sBAAKL,MAAO,CAACM,UAAU,UAAvB,UACE,cAACC,EAAA,EAAD,CAASC,UAAU,WACnB,oDAON,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKlE,UAAW2B,GAAQ,OAAxB,UACE,cAACwC,EAAA,EAAD,UAAK,cAAC,EAAD,CAAYpF,aAAc4C,EAAM9C,kBAAmBA,EAAmBC,SAAUqD,EAAMiC,SAAUnC,MAC5F,MAARN,GAAgB,cAACwC,EAAA,EAAD,CAAKnE,UAAU,uDAAf,SAAsE,oBAAIA,UAAW,aAAf,oEAEzF,cAACkE,EAAA,EAAD,UACE,eAACG,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACGzC,EACD,gCACGJ,gBAiBTO,EAAgB,WACpB,IAAMC,EAAO,IAAIsC,SACjBtC,EAAK9C,OAAO,SAAS,GAOrB,MAAO,CAAC8C,OAAME,OANC,CACbqC,QAAS,CAAC,eAAgB,wBAKNtC,IADV,iDCtECuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1F,SAAS2F,eAAe,SAM1BZ,M","file":"static/js/main.37fb760c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\"\nimport react, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n// const FormData = require('form-data');\n// const fs = require('fs');\n\nconst UploadForm = props => {\n    const {submissionHandler, formData, dataActive} = props \n    const fileInputName = \"pdf_file\"\n    const changeHandler = e => {\n        switch(e.target.name){\n            case (fileInputName):\n                formData.append(fileInputName, e.target.files[0])\n                break;\n            default:\n                formData.append(e.target.name, e.target.value)\n        }\n        \n    }\n    const handleReset = e => {\n        Array.from(document.querySelectorAll(\"input\")).forEach(\n            input => (input.value = \"\")\n          );\n    }\n    const localSubHandler = (e) => {\n        submissionHandler(e)\n        handleReset()\n    }\n    return <Form onSubmit={localSubHandler} className=\"mb-5\">\n            <div className='d-flex justify-content-center'><h1>Convert PDF</h1></div>\n            <Form.Group className={\"mb-2\"}>\n                <Form.Label htmlFor={fileInputName}>File</Form.Label>\n                <Form.Control size={dataActive ? \"sm\" : \"md\"} type=\"file\" name={fileInputName} onChange={changeHandler}/>\n            </Form.Group>\n            <Form.Group className={\"mb-2\"}>\n                <Form.Label htmlFor='row-index'>Row Index</Form.Label>\n                <Form.Control size=\"md\" type=\"number\" name=\"row-index\" aria-describedby=\"rowIndexHelpBlock\" onChange={changeHandler}/>\n                <Form.Text id=\"rowIndexHelpBlock\" muted>The line of text that contains column heads</Form.Text>\n            </Form.Group>\n            <Button type='submit' size='lg'>Convert</Button>\n        </Form>\n\n}\nexport default UploadForm","// import react, { useState } from \"react\";\n\n\nconst DataLine = props => {\n    const {line, lineNum, attributes} = props \n    const tds = attributes.map((a,i) => <td key={i} dataindex={lineNum}>{line[a]}</td>)\n    return <tr className={\"data-line\"}>\n        {tds}\n    </tr> \n}\nexport default DataLine","// import react, { useState } from \"react\";\n\nimport titleFor from \"../utilities/string/titleize\"\n\n\nconst DataHeader = props => {\n    let {attributes} = props \n    attributes = attributes.map(a => <th key={a}>{titleFor(a)}</th>)\n    return <tr className={\"data-head\"}>\n        {attributes}\n    </tr> \n}\nexport default DataHeader","import humanizeString from \"humanize-string\";\nimport titleize from 'titleize';\n\nexport default function titleFor(str){\n    return titleize(humanizeString(str))\n}","import logo from './logo.svg';\nimport react, {useState} from \"react\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport UploadForm from './form/UploadForm';\nimport DataLine from './form/DataLine';\nimport { Modal, Container, Row, Col, Table, Spinner } from 'react-bootstrap';\nimport './App.css';\nimport DataHeader from './form/DataHeader';\n\nfunction App() {\n  const [rows, setRows] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [header, setHeader] = useState(null)\n  const [fName, setFName] = useState('')\n  const {data, url, config} = configRequest()\n\n  const submissionHandler = async (e) => {\n      e.preventDefault()\n      try {\n          setLoading(true)\n          const res = await axios.post(url, data, config)\n          \n          const tableData = res.data[Object.keys(res.data)[0]]\n          const tblAtts = tableData.attributes\n          const tblHead = <DataHeader attributes={tblAtts}/>\n          const tableBody = Object.entries(tableData.data).map(([key, value]) => <DataLine key={key} lineNum={key} line={value} attributes={tblAtts}/>)\n          setRows(tableBody)\n          setHeader(tblHead)\n          setLoading(false)\n      } catch(error){\n          setLoading(false)\n          console.error({error})\n      }\n  }\n  return (\n    <div id=\"main\" className={!rows ? \"d-flex align-items-center justify-content-center p-5\" : \"\"}>\n      <Modal show={loading} onHide={()=>setLoading(false)} centered >\n        <div style={{padding: \"2rem\",display: 'flex', flexDirection:'row', justifyContent:'center', background:'transparent'}}>\n          <div style={{textAlign:'center'}}>\n            <Spinner animation='border'/>\n            <div>Loading...</div>\n          </div>\n\n        </div>\n        \n      </Modal>\n\n      <Container>\n        <Row className={rows && \"mt-6\" }>\n          <Col><UploadForm dataActive={!!rows} submissionHandler={submissionHandler} formData={data} fileName={fName}/></Col>\n          {rows == null && <Col className=\"d-flex align-items-center justify-content-center p-5\"><h2 className={\"main-title\"}>Convert Your PDF into an easy to use Data Format!</h2></Col>}\n        </Row>\n        <Row>\n          <Table striped bordered hover>\n            {header}\n            <tbody>\n              {rows}\n            </tbody>\n            \n          </Table>\n        </Row>\n        \n      </Container>\n    </div>\n    \n  );\n}\n\nexport default App;\n\n\n//Helper Functions\n\nconst configRequest = () => {\n  const data = new FormData()\n  data.append(\"table\", true)\n  const config = {\n    headers: {'content-type': 'multipart/form-data'},\n  }\n  \n  // const url = \"http://localhost:3000/pdf\"\n  const url = \"https://pdf-parser-backend.herokuapp.com/pdf\"\n  return {data, config, url}\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}